name: Rodar agente (gerar resultado_nts.xlsx)

on:
  schedule:
    - cron: "0 12 * * 1,4"   # 09:00 BRT ~> 12:00 UTC (ajuste se quiser)
  workflow_dispatch:

jobs:
  run:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Upgrade pip
        run: |
          python -m pip install --upgrade pip setuptools wheel

      - name: Instalar dependências (requirements.txt)
        run: |
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            echo "requirements.txt não encontrado; instalando pacotes essenciais de fallback"
            pip install pypdf pdfplumber pandas openpyxl beautifulsoup4 lxml requests python-dateutil
          fi

      # PASSO CRÍTICO: verificação explícita de import
      - name: Verificar instalação (pypdf e demais)
        run: |
          python -c "import sys;print(sys.version)"
          python -c "import pypdf, pdfplumber, pandas, bs4, lxml, requests; print('OK imports:', pypdf.__version__)"
          pip freeze

      # Se você usa variáveis (.env) no GitHub, injete-as via secrets/vars
      - name: Rodar agente (gerar resultado_nts.xlsx)
        env:
          ENABLE_EMAIL: "0"                   # desativa e-mail no CI (ajuste se usa Gmail)
          # Outras variáveis do seu projeto, se existirem:
          # SMTP_HOST: ${{ vars.SMTP_HOST }}
          # ...
        run: |
          python -m agente_nts.main || exit 1

      - name: Persistir saída (resultado_nts.xlsx)
        uses: actions/upload-artifact@v4
        with:
          name: resultado_nts
          path: output/resultado_nts.xlsx
          if-no-files-found: warn
