name: Rodar agente (gerar resultado_nts.xlsx)

on:
  workflow_dispatch: {}
  schedule:
    # duas vezes por semana: seg e qui às 12:00 UTC
    - cron: "0 12 * * 1,4"

jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Instalar dependências
        run: |
          python -m pip install --upgrade pip
          # instala requirements na raiz (se existir)
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          # instala requirements dentro do pacote (se existir)
          if [ -f agente_nts/requirements.txt ]; then pip install -r agente_nts/requirements.txt; fi
          # garante libs críticas mesmo sem requirements
          pip install "pypdf>=4.2" "pdfplumber>=0.11" "beautifulsoup4>=4.12" "lxml>=5.0" "pandas>=2.2" "openpyxl>=3.1" "python-dotenv>=1.0"
          python -c "import sys, pkgutil; print('OK Py:', sys.version); print('OK libs:', [m.name for m in pkgutil.iter_modules() if m.name in {'pypdf','pdfplumber','bs4','lxml','pandas','openpyxl','dotenv'}])"
      
      - name: Rodar agente
        env:
          # Se seu código lê variáveis do .env, você pode setar aqui também (opcional):
          # ENABLE_EMAIL: "0"
        run: |
          python -m agente_nts.main

      - name: Publicar artifact (resultado_nts.xlsx)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: resultado_nts
          path: |
            output/resultado_nts.xlsx
            output/**/*.xlsx
          if-no-files-found: warn

      # Notificação por e-mail do PRÓPRIO GitHub (sem SMTP)
      # Envia um email padrão do GitHub se a execução falhar
      - name: Falhou? Criar um aviso no summary
        if: failure()
        run: |
          echo "Falhou a execução do agente. Baixe os artifacts para logs/planilhas." >> $GITHUB_STEP_SUMMARY
